{"version":3,"sources":["Components/LocationMarker.jsx","Components/Header.jsx","Components/Infobox.jsx","Components/InfoProject.jsx","Components/Map.jsx","App.jsx","index.js"],"names":["LocationMarker","props","className","onClick","icon","fireTwotone","Header","useState","event","setEvent","console","log","onChange","e","target","value","Infobox","info","onCloseLocationBox","id","title","InfoProject","toogleBox","setToogleBox","toogleBoxFn","href","Map","locationBox","setLocationBox","markersLocation","eventsData","map","categories","getLat","geometries","coordinates","getLgn","lat","lng","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","defaultProps","App","setEventsData","loading","setLoading","useEffect","a","fetch","response","json","events","fetchData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAYeA,EARQ,SAACC,GACtB,OACE,qBAAKC,UAAU,WAAWC,QAASF,EAAME,QAAzC,SACE,cAAC,OAAD,CAAMC,KAAMC,IAAaH,UAAU,qBCmB1BI,EAxBA,WAEb,MAA0BC,mBAAS,YAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OAFAC,QAAQC,IAAIH,GAGV,mCACC,gFACA,6DAEC,yBAAQI,SAXZ,SAA4BC,GAC1BJ,EAASI,EAAEC,OAAOC,QAUhB,UACE,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,eAAd,wCCAOC,MAjBf,YAA8C,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,mBAEtB,OACE,sBAAKhB,UAAU,WAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,iDACA,sBAAMC,QAASe,EAAf,kBAEF,+BACE,sCAAQ,iCAASD,EAAKE,QACtB,yCAAW,iCAASF,EAAKG,kBC4BlBC,EAtCK,WAElB,MAAiCd,oBAAS,GAA1C,mBAAMe,EAAN,KAAiBC,EAAjB,KAEMC,EAAc,WACgBD,GAAjCD,IAGH,OAAKA,EAUH,sBAAKpB,UAAU,eAAf,UACE,sBAAMA,UAAU,qBAAqBC,QAASqB,EAA9C,qBAEA,sBAAKtB,UAAU,uBAAf,UACE,wCACA,yDAA2B,mBAAGuB,KAAK,iCAAiCX,OAAO,SAAhD,yBAE3B,oDACA,8DAAgC,mBAAGW,KAAK,sDAAsDX,OAAO,SAArE,8BAAhC,iEAEA,4CACA,8FAEA,uCACA,kGAtBF,sBAAKZ,UAAU,sBAAf,UACE,oDACA,sBAAMA,UAAU,4BAA4BC,QAASqB,EAArD,wBCLFE,EAAM,SAACzB,GAEX,MAAsCM,mBAAS,MAA/C,mBAAOoB,EAAP,KAAoBC,EAApB,KAMA,IAAMC,EAAkB5B,EAAM6B,WAAWC,KAAI,SAAAvB,GAI3C,GAF8C,IAA3BA,EAAMwB,WAAW,GAAGb,GAEvB,CAEd,IAAMc,EAASzB,EAAM0B,WAAW,GAAGC,YAAY,GACzCC,EAAS5B,EAAM0B,WAAW,GAAGC,YAAY,GAE/C,OAAO,cAAC,EAAD,CAA+BE,IAAKJ,EAAQK,IAAKF,EAAQjC,QAAS,kBAAMyB,EAAe,CAACT,GAAIX,EAAMW,GAAIC,MAAOZ,EAAMY,UAA9FZ,EAAMW,IAGpC,OAAO,QAGT,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,cAAC,IAAD,CACEqC,iBAAoB,CAACC,IAAK,2CAC1BC,cAAiBxC,EAAMyC,OACvBC,YAAe1C,EAAM2C,KAHvB,SAKGf,IAGDF,GAAe,cAAC,EAAD,CAASV,KAAMU,EAAaT,mBA/BjD,WACEU,EAAe,SAgCb,cAAC,EAAD,QAKNF,EAAImB,aAAe,CACjBH,OAAQ,CACNL,IAAK,QACLC,KAAM,UAERM,KAAM,GAGOlB,QC1BAoB,MA9Bf,WAEE,MAAoCvC,mBAAS,IAA7C,mBAAOuB,EAAP,KAAmBiB,EAAnB,KACA,EAA8BxC,oBAAS,GAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,qBAAU,YAES,uCAAG,gCAAAC,EAAA,6DAChBF,GAAW,GADK,SAGOG,MAAM,mDAHb,cAGVC,EAHU,gBAISA,EAASC,OAJlB,gBAIRC,EAJQ,EAIRA,OAERR,EAAcQ,GACdN,GAAW,GAPK,4CAAH,qDAUfO,KACD,IAGD,qBAAKtD,UAAU,MAAf,SACI8C,EAEE,yCADA,cAAC,EAAD,CAAKlB,WAAYA,OCrB3B2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bdf441d6.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Icon } from '@iconify/react';\r\nimport fireTwotone from '@iconify-icons/ant-design/fire-twotone';\r\n\r\nconst LocationMarker = (props) => {\r\n  return (\r\n    <div className=\"location\" onClick={props.onClick}>\r\n      <Icon icon={fireTwotone} className=\"location-icon\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LocationMarker\r\n","import React, {useState} from 'react'\r\n\r\nconst Header = () => {\r\n\r\n  const [event, setEvent] = useState('wildfire')\r\n\r\n  function handleEventsOption(e) {\r\n    setEvent(e.target.value);\r\n  }\r\n\r\n  console.log(event)\r\n\r\n  return (\r\n    <header>\r\n     <span> World Events Tracker (Powered by NASA API) </span>\r\n     <div>  \r\n      What do you want to track?\r\n      <select onChange={handleEventsOption}>\r\n        <option value=\"wildfire\">WildFire</option>\r\n        <option value=\"sea-lake-ice\">Sea and Lake Ice</option>\r\n      </select>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Infobox({info, onCloseLocationBox}) {\r\n\r\n  return (\r\n    <div className=\"info-box\">\r\n      <div className=\"info-box-header\">\r\n        <h3> EVENT LOCATION</h3>\r\n        <span onClick={onCloseLocationBox}>X</span>\r\n      </div>\r\n      <ul>\r\n        <li>ID: <strong>{info.id}</strong></li>\r\n        <li>TITLE: <strong>{info.title}</strong></li>\r\n      </ul>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Infobox\r\n","import React , { useState }from 'react';\r\n\r\nconst InfoProject = () => {\r\n\r\n  const[toogleBox, setToogleBox] = useState(false);\r\n\r\n  const toogleBoxFn = () => {\r\n    !toogleBox ? setToogleBox(true) : setToogleBox(false)\r\n  }\r\n\r\n  if (!toogleBox) {\r\n    return (\r\n      <div className=\"info-project hidden\"> \r\n        <h3>About this project</h3>\r\n        <span className=\"info-project-close hidden\" onClick={toogleBoxFn}> Open </span> \r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"info-project\">\r\n      <span className=\"info-project-close\" onClick={toogleBoxFn}> Close </span>\r\n      \r\n      <div className=\"info-project-content\">\r\n        <h3>Author</h3>\r\n        <p>Carlos Bido from Brasil <a href=\"https://github.com/carloshbido\" target=\"_blank\"> Github </a></p>\r\n\r\n        <h3>About this project</h3>\r\n        <p>This project was inspired by <a href=\"https://www.youtube.com/watch?v=ontX4zfVqK8&t=1598s\" target=\"_blank\"> Traversy Media </a> project but there are a few upgrades than original project</p>\r\n\r\n        <h3>Motivation</h3>\r\n        <p>Creating a portfolio and to study React and its peculiarities</p>\r\n\r\n        <h3>Techs</h3>\r\n        <p>React Hooks, Google Maps API, Iconify Pack, Public NASA API</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoProject;\r\n","import React, {useState} from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n//Local Imports\r\nimport LocationMarker from './LocationMarker.jsx';\r\nimport Header from './Header.jsx';\r\nimport Infobox from './Infobox.jsx';\r\nimport InfoProject from './InfoProject.jsx';\r\n\r\nconst Map = (props) => {\r\n\r\n  const [locationBox, setLocationBox] = useState(null);\r\n\r\n  function closeLocationBox() {\r\n    setLocationBox(null);\r\n  }\r\n\r\n  const markersLocation = props.eventsData.map(event => {\r\n\r\n    const isWildFire = event.categories[0].id === 9;\r\n    \r\n    if (isWildFire) {\r\n\r\n      const getLat = event.geometries[0].coordinates[1];\r\n      const getLgn = event.geometries[0].coordinates[0];\r\n\r\n      return <LocationMarker key={event.id} lat={getLat} lng={getLgn} onClick={() => setLocationBox({id: event.id, title: event.title}) } />\r\n    }\r\n\r\n    return null;\r\n  });\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <Header />\r\n      \r\n      <GoogleMapReact\r\n        bootstrapURLKeys = {{key: 'AIzaSyBGpI2F95nQJRlQLvJHEIR4cljKD-Znb9U'}}\r\n        defaultCenter = {props.center}\r\n        defaultZoom = {props.zoom}\r\n      >\r\n        {markersLocation}\r\n      </GoogleMapReact>\r\n      \r\n      { locationBox && <Infobox info={locationBox} onCloseLocationBox={closeLocationBox}/> }\r\n      \r\n      <InfoProject />\r\n    </div>\r\n  )\r\n}\r\n\r\nMap.defaultProps = {\r\n  center: {\r\n    lat: 42.3265,\r\n    lng: -122.8756,\r\n  },\r\n  zoom: 5,\r\n}\r\n\r\nexport default Map\r\n\r\n","import React, {useState, useEffect} from 'react'\nimport Map from './Components/Map.jsx';\n\nfunction App() {\n\n  const [eventsData, setEventsData] = useState([]);\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n\n      const fetchData = async () => {\n        setLoading(true);\n\n        const response = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events');\n        const { events } = await response.json();\n      \n        setEventsData(events);\n        setLoading(false);\n      }\n  \n      fetchData()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {!loading \n        ? <Map eventsData={eventsData}></Map> \n        : <h1>Loading</h1>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}